// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`exp atomic parses basic number 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "10",
  "toString": [Function],
  "type": "number",
  "value": "10",
}
`;

exports[`exp atomic parses double quote text string 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": ""hello"",
  "toString": [Function],
  "type": "string",
  "value": "hello",
}
`;

exports[`exp atomic parses false boolean 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "false",
  "toString": [Function],
  "type": "boolean",
  "value": "false",
}
`;

exports[`exp atomic parses multi-depth name 1`] = `
{
  "col": 27,
  "line": 3,
  "lineBreaks": 0,
  "offset": 56,
  "prefix": {
    "col": 23,
    "line": 3,
    "lineBreaks": 0,
    "offset": 52,
    "prefix": {
      "col": 18,
      "line": 3,
      "lineBreaks": 0,
      "offset": 47,
      "text": "name",
      "toString": [Function],
      "type": "name",
      "value": "name",
    },
    "text": "abc",
    "toString": [Function],
    "type": "name",
    "value": "abc",
  },
  "text": "xyz",
  "toString": [Function],
  "type": "name",
  "value": "xyz",
}
`;

exports[`exp atomic parses name 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "name",
  "toString": [Function],
  "type": "name",
  "value": "name",
}
`;

exports[`exp atomic parses name with number 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "5abc",
  "toString": [Function],
  "type": "name",
  "value": "5abc",
}
`;

exports[`exp atomic parses name with square brackets as part of prefix 1`] = `
{
  "col": 25,
  "line": 3,
  "lineBreaks": 0,
  "offset": 54,
  "prefix": {
    "bracket": true,
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "prefix": {
      "col": 18,
      "line": 3,
      "lineBreaks": 0,
      "offset": 47,
      "text": "abc",
      "toString": [Function],
      "type": "name",
      "value": "abc",
    },
    "text": "1",
    "toString": [Function],
    "type": "number",
    "value": "1",
  },
  "text": "xyz",
  "toString": [Function],
  "type": "name",
  "value": "xyz",
}
`;

exports[`exp atomic parses name with square brackets number 1`] = `
{
  "bracket": true,
  "col": 22,
  "line": 3,
  "lineBreaks": 0,
  "offset": 51,
  "prefix": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "abc",
    "toString": [Function],
    "type": "name",
    "value": "abc",
  },
  "text": "0",
  "toString": [Function],
  "type": "number",
  "value": "0",
}
`;

exports[`exp atomic parses name with square brackets string 1`] = `
{
  "bracket": true,
  "col": 22,
  "line": 3,
  "lineBreaks": 0,
  "offset": 51,
  "prefix": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "abc",
    "toString": [Function],
    "type": "name",
    "value": "abc",
  },
  "text": "name",
  "toString": [Function],
  "type": "name",
  "value": "name",
}
`;

exports[`exp atomic parses name with square brackets sum 1`] = `
{
  "bracket": true,
  "left": {
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "text": "1",
    "toString": [Function],
    "type": "number",
    "value": "1",
  },
  "op": {
    "col": 24,
    "line": 3,
    "lineBreaks": 0,
    "offset": 53,
    "text": "+",
    "toString": [Function],
    "type": "plus",
    "value": "+",
  },
  "prefix": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "abc",
    "toString": [Function],
    "type": "name",
    "value": "abc",
  },
  "right": {
    "col": 26,
    "line": 3,
    "lineBreaks": 0,
    "offset": 55,
    "text": "1",
    "toString": [Function],
    "type": "number",
    "value": "1",
  },
  "type": "sum",
}
`;

exports[`exp atomic parses number 0 with decimals 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "0.234234",
  "toString": [Function],
  "type": "number",
  "value": "0.234234",
}
`;

exports[`exp atomic parses number with decimals 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "10.234234",
  "toString": [Function],
  "type": "number",
  "value": "10.234234",
}
`;

exports[`exp atomic parses single quote text string 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "'hello'",
  "toString": [Function],
  "type": "string",
  "value": "hello",
}
`;

exports[`exp atomic parses true boolean 1`] = `
{
  "col": 18,
  "line": 3,
  "lineBreaks": 0,
  "offset": 47,
  "text": "true",
  "toString": [Function],
  "type": "boolean",
  "value": "true",
}
`;

exports[`exp comparison Compare variable with number 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "==",
    "toString": [Function],
    "type": "eq",
    "value": "==",
  },
  "right": {
    "col": 23,
    "line": 3,
    "lineBreaks": 0,
    "offset": 52,
    "text": "10",
    "toString": [Function],
    "type": "number",
    "value": "10",
  },
  "type": "compare",
}
`;

exports[`exp concat Concat two names 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "&",
    "toString": [Function],
    "type": "concat",
    "value": "&",
  },
  "right": {
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "concat",
}
`;

exports[`exp function calls function call with 1 named param 1`] = `
{
  "args": [
    {
      "col": 20,
      "line": 3,
      "lineBreaks": 0,
      "offset": 49,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
  ],
  "prefix": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "call",
}
`;

exports[`exp function calls function call with 2 named param 1`] = `
{
  "args": [
    {
      "col": 20,
      "line": 3,
      "lineBreaks": 0,
      "offset": 49,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
    {
      "col": 23,
      "line": 3,
      "lineBreaks": 0,
      "offset": 52,
      "text": "c",
      "toString": [Function],
      "type": "name",
      "value": "c",
    },
  ],
  "prefix": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "call",
}
`;

exports[`exp function calls function call with multi-depth prop 1`] = `
{
  "args": [
    {
      "col": 22,
      "line": 3,
      "lineBreaks": 0,
      "offset": 51,
      "text": "c",
      "toString": [Function],
      "type": "name",
      "value": "c",
    },
  ],
  "prefix": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "prefix": {
      "col": 18,
      "line": 3,
      "lineBreaks": 0,
      "offset": 47,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "call",
}
`;

exports[`exp function calls function call with multiple depth calls 1`] = `
{
  "args": [
    {
      "col": 24,
      "line": 3,
      "lineBreaks": 0,
      "offset": 53,
      "text": "c",
      "toString": [Function],
      "type": "name",
      "value": "c",
    },
  ],
  "prefix": {
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "prefix": {
      "args": [],
      "prefix": {
        "col": 18,
        "line": 3,
        "lineBreaks": 0,
        "offset": 47,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "type": "call",
    },
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "call",
}
`;

exports[`exp function calls function call with no params 1`] = `
{
  "args": [],
  "prefix": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "call",
}
`;

exports[`exp function calls function call with prop return 1`] = `
{
  "col": 22,
  "line": 3,
  "lineBreaks": 0,
  "offset": 51,
  "prefix": {
    "args": [],
    "prefix": {
      "col": 18,
      "line": 3,
      "lineBreaks": 0,
      "offset": 47,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
    "type": "call",
  },
  "text": "b",
  "toString": [Function],
  "type": "name",
  "value": "b",
}
`;

exports[`exp operators compare name OR number using || 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "||",
    "toString": [Function],
    "type": "or",
    "value": "||",
  },
  "right": {
    "col": 23,
    "line": 3,
    "lineBreaks": 0,
    "offset": 52,
    "text": "10",
    "toString": [Function],
    "type": "number",
    "value": "10",
  },
  "type": "or",
}
`;

exports[`exp operators compare name OR number using or 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "or",
    "toString": [Function],
    "type": "or",
    "value": "or",
  },
  "right": {
    "col": 23,
    "line": 3,
    "lineBreaks": 0,
    "offset": 52,
    "text": "10",
    "toString": [Function],
    "type": "number",
    "value": "10",
  },
  "type": "or",
}
`;

exports[`exp product Product two names 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "*",
    "toString": [Function],
    "type": "times",
    "value": "*",
  },
  "right": {
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "product",
}
`;

exports[`exp sum Subtract two names 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "-",
    "toString": [Function],
    "type": "minus",
    "value": "-",
  },
  "right": {
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "sum",
}
`;

exports[`exp sum Subtract two names together 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 19,
    "line": 3,
    "lineBreaks": 0,
    "offset": 48,
    "text": "-",
    "toString": [Function],
    "type": "minus",
    "value": "-",
  },
  "right": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "sum",
}
`;

exports[`exp sum Subtract two numbers 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "10",
    "toString": [Function],
    "type": "number",
    "value": "10",
  },
  "op": {
    "col": 21,
    "line": 3,
    "lineBreaks": 0,
    "offset": 50,
    "text": "-",
    "toString": [Function],
    "type": "minus",
    "value": "-",
  },
  "right": {
    "col": 23,
    "line": 3,
    "lineBreaks": 0,
    "offset": 52,
    "text": "20",
    "toString": [Function],
    "type": "number",
    "value": "20",
  },
  "type": "sum",
}
`;

exports[`exp sum Subtract two numbers together 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "1",
    "toString": [Function],
    "type": "number",
    "value": "1",
  },
  "op": {
    "col": 19,
    "line": 3,
    "lineBreaks": 0,
    "offset": 48,
    "text": "-",
    "toString": [Function],
    "type": "minus",
    "value": "-",
  },
  "right": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "2",
    "toString": [Function],
    "type": "number",
    "value": "2",
  },
  "type": "sum",
}
`;

exports[`exp sum Sum two names 1`] = `
{
  "left": {
    "col": 18,
    "line": 3,
    "lineBreaks": 0,
    "offset": 47,
    "text": "a",
    "toString": [Function],
    "type": "name",
    "value": "a",
  },
  "op": {
    "col": 20,
    "line": 3,
    "lineBreaks": 0,
    "offset": 49,
    "text": "+",
    "toString": [Function],
    "type": "plus",
    "value": "+",
  },
  "right": {
    "col": 22,
    "line": 3,
    "lineBreaks": 0,
    "offset": 51,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
  "type": "sum",
}
`;

exports[`exp unary Unary name 1`] = `
{
  "type": "not",
  "value": {
    "col": 19,
    "line": 3,
    "lineBreaks": 0,
    "offset": 48,
    "text": "b",
    "toString": [Function],
    "type": "name",
    "value": "b",
  },
}
`;

exports[`parenthesis AND and OR parenthesis 1`] = `
{
  "left": {
    "left": {
      "left": {
        "col": 19,
        "line": 3,
        "lineBreaks": 0,
        "offset": 48,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "op": {
        "col": 21,
        "line": 3,
        "lineBreaks": 0,
        "offset": 50,
        "text": ">",
        "toString": [Function],
        "type": "gt",
        "value": ">",
      },
      "right": {
        "col": 23,
        "line": 3,
        "lineBreaks": 0,
        "offset": 52,
        "text": "10",
        "toString": [Function],
        "type": "number",
        "value": "10",
      },
      "type": "compare",
    },
    "op": {
      "col": 26,
      "line": 3,
      "lineBreaks": 0,
      "offset": 55,
      "text": "||",
      "toString": [Function],
      "type": "or",
      "value": "||",
    },
    "parenthesized": true,
    "right": {
      "left": {
        "col": 29,
        "line": 3,
        "lineBreaks": 0,
        "offset": 58,
        "text": "b",
        "toString": [Function],
        "type": "name",
        "value": "b",
      },
      "op": {
        "col": 31,
        "line": 3,
        "lineBreaks": 0,
        "offset": 60,
        "text": "==",
        "toString": [Function],
        "type": "eq",
        "value": "==",
      },
      "right": {
        "col": 34,
        "line": 3,
        "lineBreaks": 0,
        "offset": 63,
        "text": "12",
        "toString": [Function],
        "type": "number",
        "value": "12",
      },
      "type": "compare",
    },
    "type": "or",
  },
  "op": {
    "col": 38,
    "line": 3,
    "lineBreaks": 0,
    "offset": 67,
    "text": "&&",
    "toString": [Function],
    "type": "and",
    "value": "&&",
  },
  "right": {
    "left": {
      "col": 41,
      "line": 3,
      "lineBreaks": 0,
      "offset": 70,
      "text": "c",
      "toString": [Function],
      "type": "name",
      "value": "c",
    },
    "op": {
      "col": 43,
      "line": 3,
      "lineBreaks": 0,
      "offset": 72,
      "text": "==",
      "toString": [Function],
      "type": "eq",
      "value": "==",
    },
    "right": {
      "col": 46,
      "line": 3,
      "lineBreaks": 0,
      "offset": 75,
      "text": "10",
      "toString": [Function],
      "type": "number",
      "value": "10",
    },
    "type": "compare",
  },
  "type": "and",
}
`;

exports[`parenthesis AND and OR reversed parenthesis 1`] = `
{
  "left": {
    "left": {
      "left": {
        "col": 19,
        "line": 3,
        "lineBreaks": 0,
        "offset": 48,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "op": {
        "col": 21,
        "line": 3,
        "lineBreaks": 0,
        "offset": 50,
        "text": ">",
        "toString": [Function],
        "type": "gt",
        "value": ">",
      },
      "right": {
        "col": 23,
        "line": 3,
        "lineBreaks": 0,
        "offset": 52,
        "text": "10",
        "toString": [Function],
        "type": "number",
        "value": "10",
      },
      "type": "compare",
    },
    "op": {
      "col": 26,
      "line": 3,
      "lineBreaks": 0,
      "offset": 55,
      "text": "&&",
      "toString": [Function],
      "type": "and",
      "value": "&&",
    },
    "parenthesized": true,
    "right": {
      "left": {
        "col": 29,
        "line": 3,
        "lineBreaks": 0,
        "offset": 58,
        "text": "b",
        "toString": [Function],
        "type": "name",
        "value": "b",
      },
      "op": {
        "col": 31,
        "line": 3,
        "lineBreaks": 0,
        "offset": 60,
        "text": "==",
        "toString": [Function],
        "type": "eq",
        "value": "==",
      },
      "right": {
        "col": 34,
        "line": 3,
        "lineBreaks": 0,
        "offset": 63,
        "text": "12",
        "toString": [Function],
        "type": "number",
        "value": "12",
      },
      "type": "compare",
    },
    "type": "and",
  },
  "op": {
    "col": 38,
    "line": 3,
    "lineBreaks": 0,
    "offset": 67,
    "text": "||",
    "toString": [Function],
    "type": "or",
    "value": "||",
  },
  "right": {
    "left": {
      "col": 41,
      "line": 3,
      "lineBreaks": 0,
      "offset": 70,
      "text": "c",
      "toString": [Function],
      "type": "name",
      "value": "c",
    },
    "op": {
      "col": 43,
      "line": 3,
      "lineBreaks": 0,
      "offset": 72,
      "text": "==",
      "toString": [Function],
      "type": "eq",
      "value": "==",
    },
    "right": {
      "col": 46,
      "line": 3,
      "lineBreaks": 0,
      "offset": 75,
      "text": "10",
      "toString": [Function],
      "type": "number",
      "value": "10",
    },
    "type": "compare",
  },
  "type": "or",
}
`;

exports[`parenthesis no parenthesis 1`] = `
{
  "left": {
    "left": {
      "col": 18,
      "line": 3,
      "lineBreaks": 0,
      "offset": 47,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
    "op": {
      "col": 20,
      "line": 3,
      "lineBreaks": 0,
      "offset": 49,
      "text": ">",
      "toString": [Function],
      "type": "gt",
      "value": ">",
    },
    "right": {
      "col": 22,
      "line": 3,
      "lineBreaks": 0,
      "offset": 51,
      "text": "10",
      "toString": [Function],
      "type": "number",
      "value": "10",
    },
    "type": "compare",
  },
  "op": {
    "col": 25,
    "line": 3,
    "lineBreaks": 0,
    "offset": 54,
    "text": "||",
    "toString": [Function],
    "type": "or",
    "value": "||",
  },
  "right": {
    "left": {
      "left": {
        "col": 28,
        "line": 3,
        "lineBreaks": 0,
        "offset": 57,
        "text": "b",
        "toString": [Function],
        "type": "name",
        "value": "b",
      },
      "op": {
        "col": 30,
        "line": 3,
        "lineBreaks": 0,
        "offset": 59,
        "text": "==",
        "toString": [Function],
        "type": "eq",
        "value": "==",
      },
      "right": {
        "col": 33,
        "line": 3,
        "lineBreaks": 0,
        "offset": 62,
        "text": "12",
        "toString": [Function],
        "type": "number",
        "value": "12",
      },
      "type": "compare",
    },
    "op": {
      "col": 36,
      "line": 3,
      "lineBreaks": 0,
      "offset": 65,
      "text": "&&",
      "toString": [Function],
      "type": "and",
      "value": "&&",
    },
    "right": {
      "left": {
        "col": 39,
        "line": 3,
        "lineBreaks": 0,
        "offset": 68,
        "text": "c",
        "toString": [Function],
        "type": "name",
        "value": "c",
      },
      "op": {
        "col": 41,
        "line": 3,
        "lineBreaks": 0,
        "offset": 70,
        "text": "==",
        "toString": [Function],
        "type": "eq",
        "value": "==",
      },
      "right": {
        "col": 44,
        "line": 3,
        "lineBreaks": 0,
        "offset": 73,
        "text": "10",
        "toString": [Function],
        "type": "number",
        "value": "10",
      },
      "type": "compare",
    },
    "type": "and",
  },
  "type": "or",
}
`;

exports[`root collections multiple collections 1`] = `
[
  {
    "fields": [
      {
        "kind": {
          "col": 17,
          "line": 3,
          "lineBreaks": 0,
          "offset": 44,
          "text": "string",
          "toString": [Function],
          "type": "name",
          "value": "string",
        },
        "name": {
          "col": 11,
          "line": 3,
          "lineBreaks": 0,
          "offset": 38,
          "text": "hello",
          "toString": [Function],
          "type": "name",
          "value": "hello",
        },
        "type": "field",
      },
    ],
    "name": {
      "col": 20,
      "line": 2,
      "lineBreaks": 0,
      "offset": 20,
      "text": "Hello",
      "toString": [Function],
      "type": "name",
      "value": "Hello",
    },
    "type": "collection",
  },
  {
    "fields": [
      {
        "kind": {
          "col": 17,
          "line": 7,
          "lineBreaks": 0,
          "offset": 105,
          "text": "string",
          "toString": [Function],
          "type": "name",
          "value": "string",
        },
        "name": {
          "col": 11,
          "line": 7,
          "lineBreaks": 0,
          "offset": 99,
          "text": "world",
          "toString": [Function],
          "type": "name",
          "value": "world",
        },
        "type": "field",
      },
    ],
    "name": {
      "col": 20,
      "line": 6,
      "lineBreaks": 0,
      "offset": 81,
      "text": "World",
      "toString": [Function],
      "type": "name",
      "value": "World",
    },
    "type": "collection",
  },
]
`;

exports[`root collections multiple field types 1`] = `
[
  {
    "fields": [
      {
        "kind": {
          "col": 17,
          "line": 3,
          "lineBreaks": 0,
          "offset": 49,
          "text": "string",
          "toString": [Function],
          "type": "name",
          "value": "string",
        },
        "name": {
          "col": 11,
          "line": 3,
          "lineBreaks": 0,
          "offset": 43,
          "text": "hello",
          "toString": [Function],
          "type": "name",
          "value": "hello",
        },
        "type": "field",
      },
      {
        "kind": {
          "col": 17,
          "line": 4,
          "lineBreaks": 0,
          "offset": 73,
          "text": "number",
          "toString": [Function],
          "type": "name",
          "value": "number",
        },
        "name": {
          "col": 11,
          "line": 4,
          "lineBreaks": 0,
          "offset": 67,
          "text": "world",
          "toString": [Function],
          "type": "name",
          "value": "world",
        },
        "required": true,
        "type": "field",
      },
      {
        "kind": {
          "col": 17,
          "line": 5,
          "lineBreaks": 0,
          "offset": 97,
          "text": "boolean",
          "toString": [Function],
          "type": "name",
          "value": "boolean",
        },
        "name": {
          "col": 11,
          "line": 5,
          "lineBreaks": 0,
          "offset": 91,
          "text": "flag",
          "toString": [Function],
          "type": "name",
          "value": "flag",
        },
        "required": true,
        "type": "field",
      },
    ],
    "name": {
      "col": 20,
      "line": 2,
      "lineBreaks": 0,
      "offset": 20,
      "text": "HelloWorld",
      "toString": [Function],
      "type": "name",
      "value": "HelloWorld",
    },
    "type": "collection",
  },
]
`;

exports[`root collections single field 1`] = `
[
  {
    "fields": [
      {
        "kind": {
          "col": 17,
          "line": 3,
          "lineBreaks": 0,
          "offset": 49,
          "text": "string",
          "toString": [Function],
          "type": "name",
          "value": "string",
        },
        "name": {
          "col": 11,
          "line": 3,
          "lineBreaks": 0,
          "offset": 43,
          "text": "hello",
          "toString": [Function],
          "type": "name",
          "value": "hello",
        },
        "type": "field",
      },
    ],
    "name": {
      "col": 20,
      "line": 2,
      "lineBreaks": 0,
      "offset": 20,
      "text": "HelloWorld",
      "toString": [Function],
      "type": "name",
      "value": "HelloWorld",
    },
    "type": "collection",
  },
]
`;

exports[`root complex example 1`] = `
[
  {
    "fields": [
      {
        "kind": {
          "col": 15,
          "line": 3,
          "lineBreaks": 0,
          "offset": 42,
          "text": "string",
          "toString": [Function],
          "type": "name",
          "value": "string",
        },
        "name": {
          "col": 9,
          "line": 3,
          "lineBreaks": 0,
          "offset": 36,
          "text": "name",
          "toString": [Function],
          "type": "name",
          "value": "name",
        },
        "type": "field",
      },
      {
        "kind": {
          "col": 14,
          "line": 4,
          "lineBreaks": 0,
          "offset": 62,
          "text": "number",
          "toString": [Function],
          "type": "name",
          "value": "number",
        },
        "name": {
          "col": 9,
          "line": 4,
          "lineBreaks": 0,
          "offset": 57,
          "text": "age",
          "toString": [Function],
          "type": "name",
          "value": "age",
        },
        "type": "field",
      },
      {
        "kind": {
          "col": 18,
          "line": 5,
          "lineBreaks": 0,
          "offset": 86,
          "text": "number",
          "toString": [Function],
          "type": "name",
          "value": "number",
        },
        "name": {
          "col": 9,
          "line": 5,
          "lineBreaks": 0,
          "offset": 77,
          "text": "balance",
          "toString": [Function],
          "type": "name",
          "value": "balance",
        },
        "type": "field",
      },
      {
        "kind": {
          "col": 20,
          "line": 6,
          "lineBreaks": 0,
          "offset": 112,
          "text": "string",
          "toString": [Function],
          "type": "name",
          "value": "string",
        },
        "name": {
          "col": 9,
          "line": 6,
          "lineBreaks": 0,
          "offset": 101,
          "text": "publicKey",
          "toString": [Function],
          "type": "name",
          "value": "publicKey",
        },
        "type": "field",
      },
      {
        "body": [
          {
            "block": [
              {
                "expression": {
                  "args": [
                    {
                      "col": 26,
                      "line": 11,
                      "lineBreaks": 0,
                      "offset": 246,
                      "text": "'invalid user'",
                      "toString": [Function],
                      "type": "string",
                      "value": "invalid user",
                    },
                  ],
                  "prefix": {
                    "col": 20,
                    "line": 11,
                    "lineBreaks": 0,
                    "offset": 240,
                    "text": "error",
                    "toString": [Function],
                    "type": "name",
                    "value": "error",
                  },
                  "type": "call",
                },
                "type": "return",
              },
            ],
            "elses": [],
            "expression": {
              "left": {
                "col": 16,
                "line": 10,
                "lineBreaks": 0,
                "offset": 191,
                "prefix": {
                  "col": 14,
                  "line": 10,
                  "lineBreaks": 0,
                  "offset": 189,
                  "text": "a",
                  "toString": [Function],
                  "type": "name",
                  "value": "a",
                },
                "text": "publicKey",
                "toString": [Function],
                "type": "name",
                "value": "publicKey",
              },
              "op": {
                "col": 26,
                "line": 10,
                "lineBreaks": 0,
                "offset": 201,
                "text": "==",
                "toString": [Function],
                "type": "eq",
                "value": "==",
              },
              "right": {
                "col": 34,
                "line": 10,
                "lineBreaks": 0,
                "offset": 209,
                "prefix": {
                  "col": 29,
                  "line": 10,
                  "lineBreaks": 0,
                  "offset": 204,
                  "text": "auth",
                  "toString": [Function],
                  "type": "name",
                  "value": "auth",
                },
                "text": "publicKey",
                "toString": [Function],
                "type": "name",
                "value": "publicKey",
              },
              "type": "compare",
            },
            "type": "if",
          },
          {
            "expression": {
              "col": 23,
              "line": 14,
              "lineBreaks": 0,
              "offset": 297,
              "text": "amount",
              "toString": [Function],
              "type": "name",
              "value": "amount",
            },
            "name": {
              "col": 13,
              "line": 14,
              "lineBreaks": 0,
              "offset": 287,
              "prefix": {
                "col": 11,
                "line": 14,
                "lineBreaks": 0,
                "offset": 285,
                "text": "a",
                "toString": [Function],
                "type": "name",
                "value": "a",
              },
              "text": "balance",
              "toString": [Function],
              "type": "name",
              "value": "balance",
            },
            "op": {
              "col": 21,
              "line": 14,
              "lineBreaks": 0,
              "offset": 295,
              "text": "=",
              "toString": [Function],
              "type": "assign",
              "value": "=",
            },
            "type": "assign",
          },
          {
            "expression": {
              "col": 24,
              "line": 15,
              "lineBreaks": 0,
              "offset": 327,
              "text": "amount",
              "toString": [Function],
              "type": "name",
              "value": "amount",
            },
            "name": {
              "col": 13,
              "line": 15,
              "lineBreaks": 0,
              "offset": 316,
              "prefix": {
                "col": 11,
                "line": 15,
                "lineBreaks": 0,
                "offset": 314,
                "text": "a",
                "toString": [Function],
                "type": "name",
                "value": "a",
              },
              "text": "balance",
              "toString": [Function],
              "type": "name",
              "value": "balance",
            },
            "op": {
              "col": 21,
              "line": 15,
              "lineBreaks": 0,
              "offset": 324,
              "text": "+=",
              "toString": [Function],
              "type": "assignplus",
              "value": "+=",
            },
            "type": "assign",
          },
          {
            "expression": {
              "col": 24,
              "line": 16,
              "lineBreaks": 0,
              "offset": 357,
              "text": "amount",
              "toString": [Function],
              "type": "name",
              "value": "amount",
            },
            "name": {
              "col": 13,
              "line": 16,
              "lineBreaks": 0,
              "offset": 346,
              "prefix": {
                "col": 11,
                "line": 16,
                "lineBreaks": 0,
                "offset": 344,
                "text": "a",
                "toString": [Function],
                "type": "name",
                "value": "a",
              },
              "text": "balance",
              "toString": [Function],
              "type": "name",
              "value": "balance",
            },
            "op": {
              "col": 21,
              "line": 16,
              "lineBreaks": 0,
              "offset": 354,
              "text": "-=",
              "toString": [Function],
              "type": "assignminus",
              "value": "-=",
            },
            "type": "assign",
          },
          {
            "expression": {
              "col": 18,
              "line": 18,
              "lineBreaks": 0,
              "offset": 382,
              "text": "a",
              "toString": [Function],
              "type": "name",
              "value": "a",
            },
            "type": "return",
          },
        ],
        "name": {
          "col": 18,
          "line": 9,
          "lineBreaks": 0,
          "offset": 150,
          "text": "transfer",
          "toString": [Function],
          "type": "name",
          "value": "transfer",
        },
        "params": [],
        "type": "function",
      },
    ],
    "name": {
      "col": 18,
      "line": 2,
      "lineBreaks": 0,
      "offset": 18,
      "text": "Account",
      "toString": [Function],
      "type": "name",
      "value": "Account",
    },
    "type": "collection",
  },
]
`;

exports[`root functions parses function block 1`] = `
[
  {
    "body": [
      {
        "expression": {
          "col": 18,
          "line": 3,
          "lineBreaks": 0,
          "offset": 51,
          "text": "a",
          "toString": [Function],
          "type": "name",
          "value": "a",
        },
        "type": "return",
      },
    ],
    "name": {
      "col": 18,
      "line": 2,
      "lineBreaks": 0,
      "offset": 18,
      "text": "HelloWorld",
      "toString": [Function],
      "type": "name",
      "value": "HelloWorld",
    },
    "params": [],
    "type": "function",
  },
]
`;

exports[`root functions parses function with multiple blocks 1`] = `
[
  {
    "body": [
      {
        "expression": {
          "col": 21,
          "line": 3,
          "lineBreaks": 0,
          "offset": 54,
          "text": "1",
          "toString": [Function],
          "type": "number",
          "value": "1",
        },
        "name": {
          "col": 17,
          "line": 3,
          "lineBreaks": 0,
          "offset": 50,
          "text": "a",
          "toString": [Function],
          "type": "name",
          "value": "a",
        },
        "type": "const",
      },
      {
        "expression": {
          "col": 18,
          "line": 4,
          "lineBreaks": 0,
          "offset": 73,
          "text": "a",
          "toString": [Function],
          "type": "name",
          "value": "a",
        },
        "type": "return",
      },
    ],
    "name": {
      "col": 18,
      "line": 2,
      "lineBreaks": 0,
      "offset": 18,
      "text": "HelloWorld",
      "toString": [Function],
      "type": "name",
      "value": "HelloWorld",
    },
    "params": [],
    "type": "function",
  },
]
`;

exports[`statements assign += 1`] = `
[
  {
    "expression": {
      "col": 14,
      "line": 4,
      "lineBreaks": 0,
      "offset": 54,
      "text": "1",
      "toString": [Function],
      "type": "number",
      "value": "1",
    },
    "name": {
      "col": 9,
      "line": 4,
      "lineBreaks": 0,
      "offset": 49,
      "prefix": {
        "col": 7,
        "line": 4,
        "lineBreaks": 0,
        "offset": 47,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "text": "b",
      "toString": [Function],
      "type": "name",
      "value": "b",
    },
    "op": {
      "col": 11,
      "line": 4,
      "lineBreaks": 0,
      "offset": 51,
      "text": "+=",
      "toString": [Function],
      "type": "assignplus",
      "value": "+=",
    },
    "type": "assign",
  },
]
`;

exports[`statements assign = 1`] = `
[
  {
    "expression": {
      "col": 13,
      "line": 4,
      "lineBreaks": 0,
      "offset": 53,
      "text": "1",
      "toString": [Function],
      "type": "number",
      "value": "1",
    },
    "name": {
      "col": 9,
      "line": 4,
      "lineBreaks": 0,
      "offset": 49,
      "prefix": {
        "col": 7,
        "line": 4,
        "lineBreaks": 0,
        "offset": 47,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "text": "b",
      "toString": [Function],
      "type": "name",
      "value": "b",
    },
    "op": {
      "col": 11,
      "line": 4,
      "lineBreaks": 0,
      "offset": 51,
      "text": "=",
      "toString": [Function],
      "type": "assign",
      "value": "=",
    },
    "type": "assign",
  },
]
`;

exports[`statements assign -= 1`] = `
[
  {
    "expression": {
      "col": 14,
      "line": 4,
      "lineBreaks": 0,
      "offset": 54,
      "text": "1",
      "toString": [Function],
      "type": "number",
      "value": "1",
    },
    "name": {
      "col": 9,
      "line": 4,
      "lineBreaks": 0,
      "offset": 49,
      "prefix": {
        "col": 7,
        "line": 4,
        "lineBreaks": 0,
        "offset": 47,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "text": "b",
      "toString": [Function],
      "type": "name",
      "value": "b",
    },
    "op": {
      "col": 11,
      "line": 4,
      "lineBreaks": 0,
      "offset": 51,
      "text": "-=",
      "toString": [Function],
      "type": "assignminus",
      "value": "-=",
    },
    "type": "assign",
  },
]
`;

exports[`statements const 1`] = `
[
  {
    "expression": {
      "col": 17,
      "line": 4,
      "lineBreaks": 0,
      "offset": 57,
      "text": "1",
      "toString": [Function],
      "type": "number",
      "value": "1",
    },
    "name": {
      "col": 13,
      "line": 4,
      "lineBreaks": 0,
      "offset": 53,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
    "type": "const",
  },
]
`;

exports[`statements if / else 1`] = `
[
  {
    "block": [
      {
        "expression": {
          "col": 16,
          "line": 5,
          "lineBreaks": 0,
          "offset": 73,
          "text": "a",
          "toString": [Function],
          "type": "name",
          "value": "a",
        },
        "type": "return",
      },
    ],
    "elses": [
      {
        "block": [
          {
            "expression": {
              "col": 16,
              "line": 7,
              "lineBreaks": 0,
              "offset": 105,
              "text": "b",
              "toString": [Function],
              "type": "name",
              "value": "b",
            },
            "type": "return",
          },
        ],
        "expression": null,
        "type": "else",
      },
    ],
    "expression": {
      "left": {
        "col": 10,
        "line": 4,
        "lineBreaks": 0,
        "offset": 50,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "op": {
        "col": 12,
        "line": 4,
        "lineBreaks": 0,
        "offset": 52,
        "text": ">",
        "toString": [Function],
        "type": "gt",
        "value": ">",
      },
      "right": {
        "col": 14,
        "line": 4,
        "lineBreaks": 0,
        "offset": 54,
        "text": "1",
        "toString": [Function],
        "type": "number",
        "value": "1",
      },
      "type": "compare",
    },
    "type": "if",
  },
]
`;

exports[`statements if / elseif / else 1`] = `
[
  {
    "block": [
      {
        "expression": {
          "col": 16,
          "line": 5,
          "lineBreaks": 0,
          "offset": 73,
          "text": "a",
          "toString": [Function],
          "type": "name",
          "value": "a",
        },
        "type": "return",
      },
    ],
    "elses": [
      {
        "block": [
          {
            "expression": {
              "col": 16,
              "line": 7,
              "lineBreaks": 0,
              "offset": 115,
              "text": "b",
              "toString": [Function],
              "type": "name",
              "value": "b",
            },
            "type": "return",
          },
        ],
        "expression": {
          "left": {
            "col": 17,
            "line": 6,
            "lineBreaks": 0,
            "offset": 91,
            "text": "a",
            "toString": [Function],
            "type": "name",
            "value": "a",
          },
          "op": {
            "col": 19,
            "line": 6,
            "lineBreaks": 0,
            "offset": 93,
            "text": "<",
            "toString": [Function],
            "type": "lt",
            "value": "<",
          },
          "right": {
            "col": 21,
            "line": 6,
            "lineBreaks": 0,
            "offset": 95,
            "text": "1",
            "toString": [Function],
            "type": "number",
            "value": "1",
          },
          "type": "compare",
        },
        "type": "elseif",
      },
      {
        "block": [
          {
            "expression": {
              "col": 16,
              "line": 10,
              "lineBreaks": 0,
              "offset": 153,
              "text": "c",
              "toString": [Function],
              "type": "name",
              "value": "c",
            },
            "type": "return",
          },
        ],
        "expression": null,
        "type": "else",
      },
    ],
    "expression": {
      "left": {
        "col": 10,
        "line": 4,
        "lineBreaks": 0,
        "offset": 50,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "op": {
        "col": 12,
        "line": 4,
        "lineBreaks": 0,
        "offset": 52,
        "text": ">",
        "toString": [Function],
        "type": "gt",
        "value": ">",
      },
      "right": {
        "col": 14,
        "line": 4,
        "lineBreaks": 0,
        "offset": 54,
        "text": "1",
        "toString": [Function],
        "type": "number",
        "value": "1",
      },
      "type": "compare",
    },
    "type": "if",
  },
]
`;

exports[`statements if 1`] = `
[
  {
    "block": [
      {
        "expression": {
          "col": 16,
          "line": 5,
          "lineBreaks": 0,
          "offset": 73,
          "text": "a",
          "toString": [Function],
          "type": "name",
          "value": "a",
        },
        "type": "return",
      },
    ],
    "elses": [],
    "expression": {
      "left": {
        "col": 10,
        "line": 4,
        "lineBreaks": 0,
        "offset": 50,
        "text": "a",
        "toString": [Function],
        "type": "name",
        "value": "a",
      },
      "op": {
        "col": 12,
        "line": 4,
        "lineBreaks": 0,
        "offset": 52,
        "text": ">",
        "toString": [Function],
        "type": "gt",
        "value": ">",
      },
      "right": {
        "col": 14,
        "line": 4,
        "lineBreaks": 0,
        "offset": 54,
        "text": "1",
        "toString": [Function],
        "type": "number",
        "value": "1",
      },
      "type": "compare",
    },
    "type": "if",
  },
]
`;

exports[`statements let 1`] = `
[
  {
    "expression": {
      "col": 15,
      "line": 4,
      "lineBreaks": 0,
      "offset": 55,
      "text": "1",
      "toString": [Function],
      "type": "number",
      "value": "1",
    },
    "name": {
      "col": 11,
      "line": 4,
      "lineBreaks": 0,
      "offset": 51,
      "text": "a",
      "toString": [Function],
      "type": "name",
      "value": "a",
    },
    "type": "let",
  },
]
`;
