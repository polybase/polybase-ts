name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
      
jobs:

  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release-')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.ADMIN_TOKEN }}

      - run: git config --global user.email "hello@polybase.xyz"
      - run: git config --global user.name "Polybase CI"

      - name: Get PR Info
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_DESC: ${{ github.event.pull_request.body }}
          PR_BRANCH: ${{ github.event.pull_request.head.ref }}

        run: |
          PR_VERSION="${PR_BRANCH#*release-}"

          echo "PR Title: $PR_TITLE"
          echo "PR Description: $PR_DESC"
          echo "PR Branch: $PR_BRANCH"
          echo "PR Version: $PR_VERSION"
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_ENV  

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: "NPM Identity"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

      - name: Install packages
        run: yarn

      - name: Build packages
        run: yarn lerna run build

      - name: "Publish"
        run: yarn lerna publish from-package --yes

      - name: "Create Release"
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/releases \
          --header "Authorization: Bearer $GITHUB_TOKEN" \
          --header 'Content-Type: application/json' \
          --data "{
            \"tag_name\": \"$PR_VERSION\",
            \"name\": \"Release $PR_VERSION\",
            \"body\": \"Release notes for version $PR_VERSION\"
          }"

  dispatch:
    needs: release
    strategy:
      matrix:
        repo: ['polybase/chat', 'polybase/social', 'polybase/explorer', 'polybase/auth', 'polybase/changelog']
    runs-on: ubuntu-latest
    steps:
      - name: Trigger repo updates
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ADMIN_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: update-packages
